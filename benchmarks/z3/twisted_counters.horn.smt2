(declare-rel state (Bool Bool Int Int Int Int Bool Int Bool Bool Bool Bool Bool Bool Bool Bool Bool))
(declare-var |_OK_| Bool)
(declare-var |_OK_.next| Bool)
(declare-var |b| Bool)
(declare-var |b.next| Bool)
(declare-var |call_intloop6counter.flby| Int)
(declare-var |call_intloop6counter.flby.next| Int)
(declare-var |call_intloop6counter.ite_keyword| Int)
(declare-var |call_intloop6counter.ite_keyword.next| Int)
(declare-var |call_intloop6counter.ite_keyword2| Int)
(declare-var |call_intloop6counter.ite_keyword2.next| Int)
(declare-var |call_intloop6counter.ite_keyword3| Int)
(declare-var |call_intloop6counter.ite_keyword3.next| Int)
(declare-var |call_intloop6counter.out| Bool)
(declare-var |call_intloop6counter.out.next| Bool)
(declare-var |call_intloop6counter.time| Int)
(declare-var |call_intloop6counter.time.next| Int)
(declare-var |call_loop6counter.a| Bool)
(declare-var |call_loop6counter.a.next| Bool)
(declare-var |call_loop6counter.b| Bool)
(declare-var |call_loop6counter.b.next| Bool)
(declare-var |call_loop6counter.c| Bool)
(declare-var |call_loop6counter.c.next| Bool)
(declare-var |call_loop6counter.flby| Bool)
(declare-var |call_loop6counter.flby.next| Bool)
(declare-var |call_loop6counter.flby2| Bool)
(declare-var |call_loop6counter.flby2.next| Bool)
(declare-var |call_loop6counter.flby3| Bool)
(declare-var |call_loop6counter.flby3.next| Bool)
(declare-var |call_loop6counter.out| Bool)
(declare-var |call_loop6counter.out.next| Bool)
(declare-var |d| Bool)
(declare-var |d.next| Bool)
(declare-var |param_x| Bool)
(declare-var |param_x.next| Bool)

(define-fun .init () Bool
(let ((.def_42 (= d b)))
(let ((.def_41 (not param_x)))
(let ((.def_43 (or .def_41 .def_42)))
(let ((.def_45 (= .def_43 _OK_)))
(let ((.def_39 (= call_loop6counter.out b)))
(let ((.def_46 (and .def_39 .def_45)))
(let ((.def_37 (= call_intloop6counter.out d)))
(let ((.def_47 (and .def_37 .def_46)))
(let ((.def_33 (and call_loop6counter.c call_loop6counter.a)))
(let ((.def_35 (= .def_33 call_loop6counter.out)))
(let ((.def_48 (and .def_35 .def_47)))
(let ((.def_32 (= call_loop6counter.flby call_loop6counter.a)))
(let ((.def_49 (and .def_32 .def_48)))
(let ((.def_30 (= call_loop6counter.flby2 call_loop6counter.b)))
(let ((.def_50 (and .def_30 .def_49)))
(let ((.def_28 (= call_loop6counter.flby3 call_loop6counter.c)))
(let ((.def_51 (and .def_28 .def_50)))
(let ((.def_24 (= call_intloop6counter.time 5)))
(let ((.def_26 (= .def_24 call_intloop6counter.out)))
(let ((.def_52 (and .def_26 .def_51)))
(let ((.def_22 (= call_intloop6counter.flby call_intloop6counter.time)))
(let ((.def_53 (and .def_22 .def_52)))
(let ((.def_17 (not call_loop6counter.flby)))
(let ((.def_15 (not call_loop6counter.flby2)))
(let ((.def_18 (and .def_15 .def_17)))
(let ((.def_13 (not call_loop6counter.flby3)))
(let ((.def_19 (and .def_13 .def_18)))
(let ((.def_11 (= call_intloop6counter.flby 0)))
(let ((.def_20 (and .def_11 .def_19)))
(let ((.def_54 (and .def_20 .def_53)))
.def_54)))))))))))))))))))))))))))))))

(define-fun .trans () Bool
(let ((.def_132 (and call_loop6counter.a param_x)))
(let ((.def_116 (not call_loop6counter.c)))
(let ((.def_133 (and .def_116 .def_132)))
(let ((.def_131 (and call_loop6counter.c call_loop6counter.b)))
(let ((.def_134 (or .def_131 .def_133)))
(let ((.def_135 (= call_loop6counter.flby.next .def_134)))
(let ((.def_128 (= call_intloop6counter.ite_keyword.next 5)))
(let ((.def_41 (not param_x)))
(let ((.def_129 (or .def_41 .def_128)))
(let ((.def_126 (= call_intloop6counter.ite_keyword.next 3)))
(let ((.def_127 (or param_x .def_126)))
(let ((.def_130 (and .def_127 .def_129)))
(let ((.def_136 (and .def_130 .def_135)))
(let ((.def_122 (and call_loop6counter.a .def_41)))
(let ((.def_119 (not call_loop6counter.b)))
(let ((.def_120 (and call_loop6counter.c .def_119)))
(let ((.def_118 (and call_loop6counter.b .def_116)))
(let ((.def_121 (or .def_118 .def_120)))
(let ((.def_123 (or .def_121 .def_122)))
(let ((.def_124 (= call_loop6counter.flby2.next .def_123)))
(let ((.def_137 (and .def_124 .def_136)))
(let ((.def_117 (= call_loop6counter.flby3.next .def_116)))
(let ((.def_138 (and .def_117 .def_137)))
(let ((.def_109 (* (- 1) call_intloop6counter.ite_keyword2.next)))
(let ((.def_110 (+ call_intloop6counter.time .def_109)))
(let ((.def_111 (= .def_110 (- 1))))
(let ((.def_102 (= call_intloop6counter.time 4)))
(let ((.def_112 (or .def_102 .def_111)))
(let ((.def_105 (= call_intloop6counter.ite_keyword2.next call_intloop6counter.ite_keyword.next)))
(let ((.def_103 (not .def_102)))
(let ((.def_106 (or .def_103 .def_105)))
(let ((.def_113 (and .def_106 .def_112)))
(let ((.def_99 (= call_intloop6counter.ite_keyword3.next 2)))
(let ((.def_24 (= call_intloop6counter.time 5)))
(let ((.def_97 (not .def_24)))
(let ((.def_100 (or .def_97 .def_99)))
(let ((.def_114 (and .def_100 .def_113)))
(let ((.def_95 (= call_intloop6counter.ite_keyword3.next call_intloop6counter.ite_keyword2.next)))
(let ((.def_96 (or .def_24 .def_95)))
(let ((.def_115 (and .def_96 .def_114)))
(let ((.def_139 (and .def_115 .def_138)))
(let ((.def_93 (= call_intloop6counter.flby.next call_intloop6counter.ite_keyword3.next)))
(let ((.def_140 (and .def_93 .def_139)))
(let ((.def_79 (= d.next b.next)))
(let ((.def_78 (not param_x.next)))
(let ((.def_80 (or .def_78 .def_79)))
(let ((.def_82 (= .def_80 _OK_.next)))
(let ((.def_76 (= call_loop6counter.out.next b.next)))
(let ((.def_83 (and .def_76 .def_82)))
(let ((.def_74 (= call_intloop6counter.out.next d.next)))
(let ((.def_84 (and .def_74 .def_83)))
(let ((.def_70 (and call_loop6counter.c.next call_loop6counter.a.next)))
(let ((.def_72 (= .def_70 call_loop6counter.out.next)))
(let ((.def_85 (and .def_72 .def_84)))
(let ((.def_69 (= call_loop6counter.flby.next call_loop6counter.a.next)))
(let ((.def_86 (and .def_69 .def_85)))
(let ((.def_66 (= call_loop6counter.flby2.next call_loop6counter.b.next)))
(let ((.def_87 (and .def_66 .def_86)))
(let ((.def_63 (= call_loop6counter.flby3.next call_loop6counter.c.next)))
(let ((.def_88 (and .def_63 .def_87)))
(let ((.def_58 (= call_intloop6counter.time.next 5)))
(let ((.def_60 (= .def_58 call_intloop6counter.out.next)))
(let ((.def_89 (and .def_60 .def_88)))
(let ((.def_57 (= call_intloop6counter.flby.next call_intloop6counter.time.next)))
(let ((.def_90 (and .def_57 .def_89)))
(let ((.def_42 (= d b)))
(let ((.def_43 (or .def_41 .def_42)))
(let ((.def_45 (= .def_43 _OK_)))
(let ((.def_39 (= call_loop6counter.out b)))
(let ((.def_46 (and .def_39 .def_45)))
(let ((.def_37 (= call_intloop6counter.out d)))
(let ((.def_47 (and .def_37 .def_46)))
(let ((.def_33 (and call_loop6counter.c call_loop6counter.a)))
(let ((.def_35 (= .def_33 call_loop6counter.out)))
(let ((.def_48 (and .def_35 .def_47)))
(let ((.def_32 (= call_loop6counter.flby call_loop6counter.a)))
(let ((.def_49 (and .def_32 .def_48)))
(let ((.def_30 (= call_loop6counter.flby2 call_loop6counter.b)))
(let ((.def_50 (and .def_30 .def_49)))
(let ((.def_28 (= call_loop6counter.flby3 call_loop6counter.c)))
(let ((.def_51 (and .def_28 .def_50)))
(let ((.def_26 (= .def_24 call_intloop6counter.out)))
(let ((.def_52 (and .def_26 .def_51)))
(let ((.def_22 (= call_intloop6counter.flby call_intloop6counter.time)))
(let ((.def_53 (and .def_22 .def_52)))
(let ((.def_91 (and .def_53 .def_90)))
(let ((.def_141 (and .def_91 .def_140)))
.def_141))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(define-fun .property () Bool
_OK_)

(rule (=> .init (state |_OK_| |b| |call_intloop6counter.flby| |call_intloop6counter.ite_keyword| |call_intloop6counter.ite_keyword2| |call_intloop6counter.ite_keyword3| |call_intloop6counter.out| |call_intloop6counter.time| |call_loop6counter.a| |call_loop6counter.b| |call_loop6counter.c| |call_loop6counter.flby| |call_loop6counter.flby2| |call_loop6counter.flby3| |call_loop6counter.out| |d| |param_x|)))
(rule (=> (and (state |_OK_| |b| |call_intloop6counter.flby| |call_intloop6counter.ite_keyword| |call_intloop6counter.ite_keyword2| |call_intloop6counter.ite_keyword3| |call_intloop6counter.out| |call_intloop6counter.time| |call_loop6counter.a| |call_loop6counter.b| |call_loop6counter.c| |call_loop6counter.flby| |call_loop6counter.flby2| |call_loop6counter.flby3| |call_loop6counter.out| |d| |param_x|) .trans) (state |_OK_.next| |b.next| |call_intloop6counter.flby.next| |call_intloop6counter.ite_keyword.next| |call_intloop6counter.ite_keyword2.next| |call_intloop6counter.ite_keyword3.next| |call_intloop6counter.out.next| |call_intloop6counter.time.next| |call_loop6counter.a.next| |call_loop6counter.b.next| |call_loop6counter.c.next| |call_loop6counter.flby.next| |call_loop6counter.flby2.next| |call_loop6counter.flby3.next| |call_loop6counter.out.next| |d.next| |param_x.next|)))
(declare-rel benchmark_query ())
(rule (=> (and (state |_OK_| |b| |call_intloop6counter.flby| |call_intloop6counter.ite_keyword| |call_intloop6counter.ite_keyword2| |call_intloop6counter.ite_keyword3| |call_intloop6counter.out| |call_intloop6counter.time| |call_loop6counter.a| |call_loop6counter.b| |call_loop6counter.c| |call_loop6counter.flby| |call_loop6counter.flby2| |call_loop6counter.flby3| |call_loop6counter.out| |d| |param_x|) (not .property)) benchmark_query))
(query benchmark_query)
