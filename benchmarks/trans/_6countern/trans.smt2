(set-info :source |printed by MathSAT|)
(declare-fun flby () Int)
(declare-fun _OK_ () Bool)
(declare-fun time.next () Int)
(declare-fun _OK_.next () Bool)
(declare-fun flby.next () Int)
(declare-fun time () Int)
(declare-fun ite.next () Int)
(define-fun .def_73 () Bool (= flby.next time.next))
(define-fun .def_70 () Bool (<= 0 time.next))
(define-fun .def_71 () Bool (not .def_70))
(define-fun .def_72 () Bool (= _OK_.next .def_71))
(define-fun .def_74 () Bool (and .def_72 .def_73))
(define-fun .def_51 () Bool (= time flby))
(define-fun .def_47 () Bool (<= 0 time))
(define-fun .def_48 () Bool (not .def_47))
(define-fun .def_49 () Bool (= _OK_ .def_48))
(define-fun .def_52 () Bool (and .def_49 .def_51))
(define-fun .def_75 () Bool (and .def_52 .def_74))
(define-fun .def_66 () Bool (= ite.next flby.next))
(define-fun .def_59 () Bool (= time 5))
(define-fun .def_62 () Bool (not .def_59))
(define-fun .def_61 () Bool (= ite.next 0))
(define-fun .def_63 () Bool (or .def_61 .def_62))
(define-fun .def_56 () Int (* (- 1) ite.next))
(define-fun .def_57 () Int (+ time .def_56))
(define-fun .def_58 () Bool (= .def_57 (- 1)))
(define-fun .def_60 () Bool (or .def_58 .def_59))
(define-fun .def_64 () Bool (and .def_60 .def_63))
(define-fun .def_67 () Bool (and .def_64 .def_66))
(define-fun .def_76 () Bool (and .def_67 .def_75))
(assert .def_76)
