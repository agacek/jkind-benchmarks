(set-info :source |printed by MathSAT|)
(declare-fun call_speed.incr.next () Int)
(declare-fun call_speed.call_counter.ite () Int)
(declare-fun call_speed.early.next () Bool)
(declare-fun early.next () Bool)
(declare-fun call_speed.call_counter.c.next () Int)
(declare-fun call_speed.incr () Int)
(declare-fun call_speed.call_counter.c () Int)
(declare-fun call_speed.call_counter.ite.next () Int)
(declare-fun _OK_.next () Bool)
(declare-fun call_speed.late.next () Bool)
(declare-fun call_speed.flby2.next () Bool)
(declare-fun call_speed.call_counter.ite2 () Int)
(declare-fun late () Bool)
(declare-fun call_speed.late () Bool)
(declare-fun call_speed.flby2 () Bool)
(declare-fun call_speed.diff () Int)
(declare-fun late.next () Bool)
(declare-fun call_speed.diff.next () Int)
(declare-fun call_speed.ite.next () Int)
(declare-fun early () Bool)
(declare-fun call_speed.ite () Int)
(declare-fun call_speed.ite4.next () Bool)
(declare-fun call_speed.call_counter.flby () Int)
(declare-fun _OK_ () Bool)
(declare-fun param_beacon () Bool)
(declare-fun param_second.next () Bool)
(declare-fun call_speed.ite2.next () Int)
(declare-fun call_speed.call_counter.pc.next () Int)
(declare-fun call_speed.early () Bool)
(declare-fun param_second () Bool)
(declare-fun call_speed.ite2 () Int)
(declare-fun call_speed.ite3.next () Bool)
(declare-fun call_speed.flby.next () Bool)
(declare-fun call_speed.call_counter.pc () Int)
(declare-fun param_beacon.next () Bool)
(declare-fun call_speed.flby () Bool)
(declare-fun call_speed.call_counter.flby.next () Int)
(declare-fun call_speed.call_counter.ite2.next () Int)
(define-fun .def_394 () Bool (= call_speed.call_counter.ite.next call_speed.call_counter.ite2.next))
(define-fun .def_392 () Bool (= call_speed.call_counter.flby.next call_speed.call_counter.pc.next))
(define-fun .def_390 () Bool (= call_speed.call_counter.c.next call_speed.call_counter.ite2.next))
(define-fun .def_387 () Bool (= call_speed.incr.next call_speed.ite2.next))
(define-fun .def_385 () Bool (= call_speed.diff.next call_speed.call_counter.c.next))
(define-fun .def_382 () Bool (= call_speed.flby.next call_speed.early.next))
(define-fun .def_380 () Bool (= call_speed.flby2.next call_speed.late.next))
(define-fun .def_376 () Bool (= call_speed.ite.next call_speed.ite2.next))
(define-fun .def_371 () Bool (not param_second.next))
(define-fun .def_372 () Bool (and param_beacon.next .def_371))
(define-fun .def_377 () Bool (or .def_372 .def_376))
(define-fun .def_373 () Bool (not .def_372))
(define-fun .def_370 () Bool (= call_speed.ite2.next 1))
(define-fun .def_374 () Bool (or .def_370 .def_373))
(define-fun .def_366 () Bool (= call_speed.ite.next 0))
(define-fun .def_361 () Bool (not param_beacon.next))
(define-fun .def_362 () Bool (and param_second.next .def_361))
(define-fun .def_367 () Bool (or .def_362 .def_366))
(define-fun .def_363 () Bool (not .def_362))
(define-fun .def_360 () Bool (= call_speed.ite.next (- 1)))
(define-fun .def_364 () Bool (or .def_360 .def_363))
(define-fun .def_353 () Int (* (- 1) call_speed.call_counter.ite.next))
(define-fun .def_354 () Int (+ .def_353 call_speed.incr.next))
(define-fun .def_355 () Int (+ call_speed.call_counter.pc.next .def_354))
(define-fun .def_356 () Bool (= .def_355 0))
(define-fun .def_343 () Bool (<= 1000 call_speed.call_counter.pc.next))
(define-fun .def_344 () Bool (not .def_343))
(define-fun .def_341 () Bool (or param_beacon.next param_second.next))
(define-fun .def_337 () Bool (<= call_speed.call_counter.pc.next (- 1000)))
(define-fun .def_338 () Bool (not .def_337))
(define-fun .def_342 () Bool (and .def_338 .def_341))
(define-fun .def_345 () Bool (and .def_342 .def_344))
(define-fun .def_347 () Bool (not .def_345))
(define-fun .def_357 () Bool (or .def_347 .def_356))
(define-fun .def_336 () Bool (= call_speed.call_counter.pc.next call_speed.call_counter.ite.next))
(define-fun .def_346 () Bool (or .def_336 .def_345))
(define-fun .def_358 () Bool (and .def_346 .def_357))
(define-fun .def_365 () Bool (and .def_358 .def_364))
(define-fun .def_368 () Bool (and .def_365 .def_367))
(define-fun .def_375 () Bool (and .def_368 .def_374))
(define-fun .def_378 () Bool (and .def_375 .def_377))
(define-fun .def_332 () Bool (= early.next call_speed.early.next))
(define-fun .def_329 () Bool (= late.next call_speed.late.next))
(define-fun .def_325 () Bool (and late.next early.next))
(define-fun .def_326 () Bool (not .def_325))
(define-fun .def_327 () Bool (= _OK_.next .def_326))
(define-fun .def_330 () Bool (and .def_327 .def_329))
(define-fun .def_333 () Bool (and .def_330 .def_332))
(define-fun .def_379 () Bool (and .def_333 .def_378))
(define-fun .def_381 () Bool (and .def_379 .def_380))
(define-fun .def_383 () Bool (and .def_381 .def_382))
(define-fun .def_386 () Bool (and .def_383 .def_385))
(define-fun .def_388 () Bool (and .def_386 .def_387))
(define-fun .def_391 () Bool (and .def_388 .def_390))
(define-fun .def_393 () Bool (and .def_391 .def_392))
(define-fun .def_395 () Bool (and .def_393 .def_394))
(define-fun .def_283 () Bool (= call_speed.call_counter.ite call_speed.call_counter.ite2))
(define-fun .def_281 () Bool (= call_speed.call_counter.pc call_speed.call_counter.flby))
(define-fun .def_278 () Bool (= call_speed.call_counter.c call_speed.call_counter.ite2))
(define-fun .def_275 () Bool (= call_speed.incr call_speed.ite2))
(define-fun .def_273 () Bool (= call_speed.diff call_speed.call_counter.c))
(define-fun .def_269 () Bool (= call_speed.early call_speed.flby))
(define-fun .def_266 () Bool (= call_speed.late call_speed.flby2))
(define-fun .def_261 () Bool (= call_speed.ite call_speed.ite2))
(define-fun .def_256 () Bool (not param_second))
(define-fun .def_257 () Bool (and param_beacon .def_256))
(define-fun .def_262 () Bool (or .def_257 .def_261))
(define-fun .def_258 () Bool (not .def_257))
(define-fun .def_255 () Bool (= call_speed.ite2 1))
(define-fun .def_259 () Bool (or .def_255 .def_258))
(define-fun .def_251 () Bool (= call_speed.ite 0))
(define-fun .def_246 () Bool (not param_beacon))
(define-fun .def_247 () Bool (and param_second .def_246))
(define-fun .def_252 () Bool (or .def_247 .def_251))
(define-fun .def_248 () Bool (not .def_247))
(define-fun .def_245 () Bool (= call_speed.ite (- 1)))
(define-fun .def_249 () Bool (or .def_245 .def_248))
(define-fun .def_238 () Int (* (- 1) call_speed.call_counter.ite))
(define-fun .def_239 () Int (+ .def_238 call_speed.incr))
(define-fun .def_240 () Int (+ call_speed.call_counter.pc .def_239))
(define-fun .def_241 () Bool (= .def_240 0))
(define-fun .def_228 () Bool (<= 1000 call_speed.call_counter.pc))
(define-fun .def_229 () Bool (not .def_228))
(define-fun .def_226 () Bool (or param_beacon param_second))
(define-fun .def_222 () Bool (<= call_speed.call_counter.pc (- 1000)))
(define-fun .def_223 () Bool (not .def_222))
(define-fun .def_227 () Bool (and .def_223 .def_226))
(define-fun .def_230 () Bool (and .def_227 .def_229))
(define-fun .def_232 () Bool (not .def_230))
(define-fun .def_242 () Bool (or .def_232 .def_241))
(define-fun .def_221 () Bool (= call_speed.call_counter.pc call_speed.call_counter.ite))
(define-fun .def_231 () Bool (or .def_221 .def_230))
(define-fun .def_243 () Bool (and .def_231 .def_242))
(define-fun .def_250 () Bool (and .def_243 .def_249))
(define-fun .def_253 () Bool (and .def_250 .def_252))
(define-fun .def_260 () Bool (and .def_253 .def_259))
(define-fun .def_263 () Bool (and .def_260 .def_262))
(define-fun .def_217 () Bool (= early call_speed.early))
(define-fun .def_214 () Bool (= late call_speed.late))
(define-fun .def_210 () Bool (and late early))
(define-fun .def_211 () Bool (not .def_210))
(define-fun .def_212 () Bool (= _OK_ .def_211))
(define-fun .def_215 () Bool (and .def_212 .def_214))
(define-fun .def_218 () Bool (and .def_215 .def_217))
(define-fun .def_264 () Bool (and .def_218 .def_263))
(define-fun .def_267 () Bool (and .def_264 .def_266))
(define-fun .def_270 () Bool (and .def_267 .def_269))
(define-fun .def_274 () Bool (and .def_270 .def_273))
(define-fun .def_276 () Bool (and .def_274 .def_275))
(define-fun .def_279 () Bool (and .def_276 .def_278))
(define-fun .def_282 () Bool (and .def_279 .def_281))
(define-fun .def_284 () Bool (and .def_282 .def_283))
(define-fun .def_396 () Bool (and .def_284 .def_395))
(define-fun .def_320 () Bool (= call_speed.call_counter.c call_speed.call_counter.flby.next))
(define-fun .def_317 () Bool (= call_speed.ite4.next call_speed.flby2.next))
(define-fun .def_314 () Bool (= call_speed.ite3.next call_speed.flby.next))
(define-fun .def_309 () Bool (not call_speed.early))
(define-fun .def_306 () Bool (<= call_speed.diff.next 0))
(define-fun .def_307 () Bool (not .def_306))
(define-fun .def_308 () Bool (= call_speed.ite3.next .def_307))
(define-fun .def_310 () Bool (or .def_308 .def_309))
(define-fun .def_302 () Bool (<= 10 call_speed.diff.next))
(define-fun .def_304 () Bool (= .def_302 call_speed.ite3.next))
(define-fun .def_305 () Bool (or call_speed.early .def_304))
(define-fun .def_311 () Bool (and .def_305 .def_310))
(define-fun .def_299 () Bool (not call_speed.late))
(define-fun .def_296 () Bool (<= 0 call_speed.diff.next))
(define-fun .def_297 () Bool (not .def_296))
(define-fun .def_298 () Bool (= call_speed.ite4.next .def_297))
(define-fun .def_300 () Bool (or .def_298 .def_299))
(define-fun .def_292 () Bool (<= call_speed.diff.next (- 10)))
(define-fun .def_294 () Bool (= .def_292 call_speed.ite4.next))
(define-fun .def_295 () Bool (or call_speed.late .def_294))
(define-fun .def_301 () Bool (and .def_295 .def_300))
(define-fun .def_312 () Bool (and .def_301 .def_311))
(define-fun .def_315 () Bool (and .def_312 .def_314))
(define-fun .def_318 () Bool (and .def_315 .def_317))
(define-fun .def_321 () Bool (and .def_318 .def_320))
(define-fun .def_397 () Bool (and .def_321 .def_396))
(assert .def_397)
