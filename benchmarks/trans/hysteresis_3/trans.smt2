(set-info :source |printed by MathSAT|)
(declare-fun call_speed.flby2.next () Bool)
(declare-fun early () Bool)
(declare-fun param_beacon.next () Bool)
(declare-fun call_speed.ite4.next () Bool)
(declare-fun call_speed.ite3.next () Bool)
(declare-fun call_speed.ite2.next () Int)
(declare-fun call_speed.flby2 () Bool)
(declare-fun call_speed.call_counter.c () Int)
(declare-fun flby () Bool)
(declare-fun call_speed.call_counter.ite.next () Int)
(declare-fun call_speed.ite.next () Int)
(declare-fun call_speed.call_counter.ite2 () Int)
(declare-fun call_speed.incr () Int)
(declare-fun call_speed.call_counter.pc () Int)
(declare-fun call_speed.call_counter.ite2.next () Int)
(declare-fun call_speed.early.next () Bool)
(declare-fun call_speed.flby () Bool)
(declare-fun _OK_ () Bool)
(declare-fun call_speed.flby.next () Bool)
(declare-fun call_speed.incr.next () Int)
(declare-fun call_speed.ite2 () Int)
(declare-fun early.next () Bool)
(declare-fun call_speed.call_counter.pc.next () Int)
(declare-fun call_speed.ite () Int)
(declare-fun call_speed.diff () Int)
(declare-fun call_speed.diff.next () Int)
(declare-fun call_speed.late.next () Bool)
(declare-fun call_speed.late () Bool)
(declare-fun late.next () Bool)
(declare-fun call_speed.call_counter.c.next () Int)
(declare-fun call_speed.call_counter.flby.next () Int)
(declare-fun param_second.next () Bool)
(declare-fun flby.next () Bool)
(declare-fun call_speed.early () Bool)
(declare-fun param_second () Bool)
(declare-fun param_beacon () Bool)
(declare-fun call_speed.call_counter.flby () Int)
(declare-fun _OK_.next () Bool)
(declare-fun late () Bool)
(declare-fun call_speed.call_counter.ite () Int)
(define-fun .def_400 () Bool (= call_speed.call_counter.ite.next call_speed.call_counter.ite2.next))
(define-fun .def_398 () Bool (= call_speed.call_counter.flby.next call_speed.call_counter.pc.next))
(define-fun .def_396 () Bool (= call_speed.call_counter.c.next call_speed.call_counter.ite2.next))
(define-fun .def_393 () Bool (= call_speed.incr.next call_speed.ite2.next))
(define-fun .def_391 () Bool (= call_speed.diff.next call_speed.call_counter.c.next))
(define-fun .def_388 () Bool (= call_speed.flby.next call_speed.early.next))
(define-fun .def_386 () Bool (= call_speed.flby2.next call_speed.late.next))
(define-fun .def_382 () Bool (= call_speed.ite.next call_speed.ite2.next))
(define-fun .def_377 () Bool (not param_second.next))
(define-fun .def_378 () Bool (and param_beacon.next .def_377))
(define-fun .def_383 () Bool (or .def_378 .def_382))
(define-fun .def_379 () Bool (not .def_378))
(define-fun .def_376 () Bool (= call_speed.ite2.next 1))
(define-fun .def_380 () Bool (or .def_376 .def_379))
(define-fun .def_372 () Bool (= call_speed.ite.next 0))
(define-fun .def_367 () Bool (not param_beacon.next))
(define-fun .def_368 () Bool (and param_second.next .def_367))
(define-fun .def_373 () Bool (or .def_368 .def_372))
(define-fun .def_369 () Bool (not .def_368))
(define-fun .def_366 () Bool (= call_speed.ite.next (- 1)))
(define-fun .def_370 () Bool (or .def_366 .def_369))
(define-fun .def_359 () Int (* (- 1) call_speed.call_counter.ite.next))
(define-fun .def_360 () Int (+ .def_359 call_speed.incr.next))
(define-fun .def_361 () Int (+ call_speed.call_counter.pc.next .def_360))
(define-fun .def_362 () Bool (= .def_361 0))
(define-fun .def_349 () Bool (<= 1000 call_speed.call_counter.pc.next))
(define-fun .def_350 () Bool (not .def_349))
(define-fun .def_347 () Bool (or param_beacon.next param_second.next))
(define-fun .def_343 () Bool (<= call_speed.call_counter.pc.next (- 1000)))
(define-fun .def_344 () Bool (not .def_343))
(define-fun .def_348 () Bool (and .def_344 .def_347))
(define-fun .def_351 () Bool (and .def_348 .def_350))
(define-fun .def_353 () Bool (not .def_351))
(define-fun .def_363 () Bool (or .def_353 .def_362))
(define-fun .def_342 () Bool (= call_speed.call_counter.pc.next call_speed.call_counter.ite.next))
(define-fun .def_352 () Bool (or .def_342 .def_351))
(define-fun .def_364 () Bool (and .def_352 .def_363))
(define-fun .def_371 () Bool (and .def_364 .def_370))
(define-fun .def_374 () Bool (and .def_371 .def_373))
(define-fun .def_381 () Bool (and .def_374 .def_380))
(define-fun .def_384 () Bool (and .def_381 .def_383))
(define-fun .def_338 () Bool (= early.next call_speed.early.next))
(define-fun .def_335 () Bool (= late.next call_speed.late.next))
(define-fun .def_332 () Bool (= flby.next _OK_.next))
(define-fun .def_336 () Bool (and .def_332 .def_335))
(define-fun .def_339 () Bool (and .def_336 .def_338))
(define-fun .def_385 () Bool (and .def_339 .def_384))
(define-fun .def_387 () Bool (and .def_385 .def_386))
(define-fun .def_389 () Bool (and .def_387 .def_388))
(define-fun .def_392 () Bool (and .def_389 .def_391))
(define-fun .def_394 () Bool (and .def_392 .def_393))
(define-fun .def_397 () Bool (and .def_394 .def_396))
(define-fun .def_399 () Bool (and .def_397 .def_398))
(define-fun .def_401 () Bool (and .def_399 .def_400))
(define-fun .def_285 () Bool (= call_speed.call_counter.ite call_speed.call_counter.ite2))
(define-fun .def_283 () Bool (= call_speed.call_counter.pc call_speed.call_counter.flby))
(define-fun .def_280 () Bool (= call_speed.call_counter.c call_speed.call_counter.ite2))
(define-fun .def_277 () Bool (= call_speed.incr call_speed.ite2))
(define-fun .def_275 () Bool (= call_speed.diff call_speed.call_counter.c))
(define-fun .def_271 () Bool (= call_speed.early call_speed.flby))
(define-fun .def_268 () Bool (= call_speed.late call_speed.flby2))
(define-fun .def_263 () Bool (= call_speed.ite call_speed.ite2))
(define-fun .def_258 () Bool (not param_second))
(define-fun .def_259 () Bool (and param_beacon .def_258))
(define-fun .def_264 () Bool (or .def_259 .def_263))
(define-fun .def_260 () Bool (not .def_259))
(define-fun .def_257 () Bool (= call_speed.ite2 1))
(define-fun .def_261 () Bool (or .def_257 .def_260))
(define-fun .def_253 () Bool (= call_speed.ite 0))
(define-fun .def_248 () Bool (not param_beacon))
(define-fun .def_249 () Bool (and param_second .def_248))
(define-fun .def_254 () Bool (or .def_249 .def_253))
(define-fun .def_250 () Bool (not .def_249))
(define-fun .def_247 () Bool (= call_speed.ite (- 1)))
(define-fun .def_251 () Bool (or .def_247 .def_250))
(define-fun .def_240 () Int (* (- 1) call_speed.call_counter.ite))
(define-fun .def_241 () Int (+ .def_240 call_speed.incr))
(define-fun .def_242 () Int (+ call_speed.call_counter.pc .def_241))
(define-fun .def_243 () Bool (= .def_242 0))
(define-fun .def_230 () Bool (<= 1000 call_speed.call_counter.pc))
(define-fun .def_231 () Bool (not .def_230))
(define-fun .def_228 () Bool (or param_beacon param_second))
(define-fun .def_224 () Bool (<= call_speed.call_counter.pc (- 1000)))
(define-fun .def_225 () Bool (not .def_224))
(define-fun .def_229 () Bool (and .def_225 .def_228))
(define-fun .def_232 () Bool (and .def_229 .def_231))
(define-fun .def_234 () Bool (not .def_232))
(define-fun .def_244 () Bool (or .def_234 .def_243))
(define-fun .def_223 () Bool (= call_speed.call_counter.pc call_speed.call_counter.ite))
(define-fun .def_233 () Bool (or .def_223 .def_232))
(define-fun .def_245 () Bool (and .def_233 .def_244))
(define-fun .def_252 () Bool (and .def_245 .def_251))
(define-fun .def_255 () Bool (and .def_252 .def_254))
(define-fun .def_262 () Bool (and .def_255 .def_261))
(define-fun .def_265 () Bool (and .def_262 .def_264))
(define-fun .def_219 () Bool (= early call_speed.early))
(define-fun .def_215 () Bool (= late call_speed.late))
(define-fun .def_212 () Bool (= _OK_ flby))
(define-fun .def_216 () Bool (and .def_212 .def_215))
(define-fun .def_220 () Bool (and .def_216 .def_219))
(define-fun .def_266 () Bool (and .def_220 .def_265))
(define-fun .def_269 () Bool (and .def_266 .def_268))
(define-fun .def_272 () Bool (and .def_269 .def_271))
(define-fun .def_276 () Bool (and .def_272 .def_275))
(define-fun .def_278 () Bool (and .def_276 .def_277))
(define-fun .def_281 () Bool (and .def_278 .def_280))
(define-fun .def_284 () Bool (and .def_281 .def_283))
(define-fun .def_286 () Bool (and .def_284 .def_285))
(define-fun .def_402 () Bool (and .def_286 .def_401))
(define-fun .def_329 () Bool (= call_speed.call_counter.c call_speed.call_counter.flby.next))
(define-fun .def_326 () Bool (= call_speed.ite4.next call_speed.flby2.next))
(define-fun .def_323 () Bool (= call_speed.ite3.next call_speed.flby.next))
(define-fun .def_318 () Bool (not call_speed.early))
(define-fun .def_315 () Bool (<= call_speed.diff.next 0))
(define-fun .def_316 () Bool (not .def_315))
(define-fun .def_317 () Bool (= call_speed.ite3.next .def_316))
(define-fun .def_319 () Bool (or .def_317 .def_318))
(define-fun .def_311 () Bool (<= 10 call_speed.diff.next))
(define-fun .def_313 () Bool (= .def_311 call_speed.ite3.next))
(define-fun .def_314 () Bool (or call_speed.early .def_313))
(define-fun .def_320 () Bool (and .def_314 .def_319))
(define-fun .def_306 () Bool (and late early.next))
(define-fun .def_307 () Bool (not .def_306))
(define-fun .def_309 () Bool (= .def_307 flby.next))
(define-fun .def_302 () Bool (not call_speed.late))
(define-fun .def_299 () Bool (<= 0 call_speed.diff.next))
(define-fun .def_300 () Bool (not .def_299))
(define-fun .def_301 () Bool (= call_speed.ite4.next .def_300))
(define-fun .def_303 () Bool (or .def_301 .def_302))
(define-fun .def_295 () Bool (<= call_speed.diff.next (- 10)))
(define-fun .def_297 () Bool (= .def_295 call_speed.ite4.next))
(define-fun .def_298 () Bool (or call_speed.late .def_297))
(define-fun .def_304 () Bool (and .def_298 .def_303))
(define-fun .def_310 () Bool (and .def_304 .def_309))
(define-fun .def_321 () Bool (and .def_310 .def_320))
(define-fun .def_324 () Bool (and .def_321 .def_323))
(define-fun .def_327 () Bool (and .def_324 .def_326))
(define-fun .def_330 () Bool (and .def_327 .def_329))
(define-fun .def_403 () Bool (and .def_330 .def_402))
(assert .def_403)
